<?php

namespace AppBundle\Repository;

use AppBundle\Entity\EquipoEvaluador;
use AppBundle\Entity\EvaluadorPremio;
use AppBundle\Entity\Premio;

/**
 * EvaluadorPremioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EvaluadorPremioRepository extends \Doctrine\ORM\EntityRepository
{
	public function getQBForEquipoEvaluadorType(EquipoEvaluador $ee)
	{
		$qb = $this->createQueryBuilder('ep')
            ->andWhere('ep.premio = :premio')
            ->andWhere('ep.estado = :estado')
            ->setParameter('premio', $ee->getPremio())
            ->setParameter('estado', EvaluadorPremio::ESTADO_ACTIVO);

        if ($ee->getId()) {
            $qb->andWhere('ep.equipo IS NULL OR ep.equipo = :equipo')
                ->setParameter('equipo', $ee);
        } else {
            $qb->andWhere('ep.equipo IS NULL');
        }

        return $qb;
	}

    public function getCant(Premio $premio){
        $qb = $this->createQueryBuilder('ep')
            ->select('count(ep.id)')
            ->andWhere('ep.premio = :premio')
            ->setParameter('premio', $premio);

        return  $qb->getQuery()->getSingleScalarResult();
    }

    public function getEvaluadoresAprobadosYActivosDelPremio(Premio $premio)
    {
        $qb = $this->createQueryBuilder('ep')
            ->andWhere('ep.premio = :premio')
            ->andWhere('ep.estado IN (:estados)')
            ->setParameter('premio', $premio)
            ->setParameter(
                'estados',
                array(EvaluadorPremio::ESTADO_APROBADO, EvaluadorPremio::ESTADO_ACTIVO)
            );

        return $qb->getQuery()->getResult();
    }
}
